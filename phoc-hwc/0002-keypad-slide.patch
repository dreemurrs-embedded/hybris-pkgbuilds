From 5fad9e83bff744b4d1c23259a7d52205f8f92cc5 Mon Sep 17 00:00:00 2001
From: "Eugenio Paolantonio (g7)" <me@medesimo.eu>
Date: Sat, 31 Oct 2020 16:24:34 +0100
Subject: [PATCH] (to be broken up) phosh: forward switch events

Signed-off-by: Eugenio Paolantonio (g7) <me@medesimo.eu>
---
 protocols/phosh-private.xml | 10 +++++++++-
 src/phosh.c                 | 20 ++++++++++++++++++++
 src/phosh.h                 |  2 ++
 src/switch.c                | 18 +++++++++++++++++-
 4 files changed, 48 insertions(+), 2 deletions(-)

diff --git a/protocols/phosh-private.xml b/protocols/phosh-private.xml
index 4e15ad5..435f85c 100644
--- a/protocols/phosh-private.xml
+++ b/protocols/phosh-private.xml
@@ -1,5 +1,5 @@
 <protocol name="phosh">
-  <interface name="phosh_private" version="5">
+  <interface name="phosh_private" version="6">
     <description summary="Phone shell extensions">
       Private protocol between phosh and the compositor.
     </description>
@@ -48,6 +48,14 @@
       <arg name="id" type="new_id" interface="phosh_private_keyboard_event"/>
     </request>
 
+    <event name="switch_event" since="6">
+      <description summary="forward a switch event">
+        Forwards a switch event to the client.
+      </description>
+      <arg name="event" type="uint" summary="the switch event"/>
+      <arg name="state" type="uint" summary="the switch event state"/>
+    </event>
+
   </interface>
 
   <interface name="phosh_private_keyboard_event" version="5">
diff --git a/src/phosh.c b/src/phosh.c
index b0d675d..ad7788f 100644
--- a/src/phosh.c
+++ b/src/phosh.c
@@ -15,6 +15,7 @@
 #include <wayland-server-core.h>
 #include <wlr/config.h>
 #include <wlr/types/wlr_surface.h>
+#include <wlr/types/wlr_switch.h>
 #include <wlr/util/log.h>
 #include <wlr/render/wlr_texture.h>
 #include <wlr/types/wlr_matrix.h>
@@ -650,3 +651,22 @@ phosh_forward_keysym (PhocKeyCombo *combo,
 
   return forwarded;
 }
+
+bool
+phosh_forward_switch_event (struct wlr_event_switch_toggle *event)
+{
+  PhocServer *server = phoc_server_get_default ();
+
+  struct phosh_private *phosh_private;
+  phosh_private = server->desktop->phosh;
+
+  if (phosh_private && phosh_private->resource) {
+      phosh_private_send_switch_event (phosh_private->resource,
+                                       event->switch_type,
+                                       event->switch_state);
+
+      return true;
+  }
+
+  return false;
+}
diff --git a/src/phosh.h b/src/phosh.h
index eef6d58..2380a6f 100644
--- a/src/phosh.h
+++ b/src/phosh.h
@@ -6,6 +6,7 @@
 
 #pragma once
 #include <wlr/types/wlr_layer_shell_v1.h>
+#include <wlr/types/wlr_switch.h>
 #include <gmodule.h>
 #include "keybindings.h"
 
@@ -47,3 +48,4 @@ struct phosh_private_xdg_switcher *phosh_private_xdg_switcher_from_resource(stru
 struct phosh_private_screencopy_frame *phosh_private_screencopy_frame_from_resource(struct wl_resource *resource);
 
 bool phosh_forward_keysym (PhocKeyCombo *combo, uint32_t timestamp);
+bool phosh_forward_switch_event (struct wlr_event_switch_toggle *event);
diff --git a/src/switch.c b/src/switch.c
index 56dd768..fa5d39e 100644
--- a/src/switch.c
+++ b/src/switch.c
@@ -21,6 +21,22 @@ void roots_switch_handle_toggle(struct roots_switch *switch_device,
 				event->switch_state != sc->switch_state) {
 			continue;
 		}
-		g_warning ("Unhandled switch event %s", sc->name);
+		g_debug ("Handling switch event %i (state %i)", event->switch_type,
+		         event->switch_state);
+
+		if (!phosh_forward_switch_event (event)) {
+			/* FIXME: If the switch reliability is set to RELIABILITY_RELIABLE
+			 * and the lid/slide is closed, libinput will dispatch an
+			 * event just after the device has been added -- but
+			 * this means that the phosh private protocol is not ready
+			 * yet.
+			 *
+			 * Workaround this by trying again after one second. This
+			 * is less than ideal and should be changed for something
+			 * better.
+			*/
+			/* TODO REIMPLEMENT THIS */
+			g_warning ("Fail");
+		}
 	}
 }
